name: Test MCP Data Analysis Toolkit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run comprehensive tests
      run: |
        python tests/test_mcp.py
    
    - name: Run demo script
      run: |
        python examples/demo.py
    
    - name: Test server startup
      run: |
        timeout 5s python src/mcp_servers/basic_server.py || true
        timeout 5s python src/mcp_servers/advanced_server.py || true
        timeout 5s python src/mcp_servers/data_analysis_server.py || true
      shell: bash
    
    - name: Check code formatting
      run: |
        pip install black isort
        black --check src/ tests/ examples/ || echo "Code formatting issues found"
        isort --check-only src/ tests/ examples/ || echo "Import sorting issues found"
    
    - name: Type checking
      run: |
        pip install mypy
        mypy src/ --ignore-missing-imports || echo "Type checking completed with warnings"
    
    - name: Security check
      run: |
        pip install bandit
        bandit -r src/ || echo "Security check completed"
    
    - name: Test package installation
      run: |
        pip install -e .
        which mcp-basic-server || echo "Command line tools installed"
        which mcp-data-analysis-server || echo "Command line tools installed"